{"version":3,"sources":["components/Navigation/NavAside/styled.ts","components/Navigation/NavAside/NavAside.tsx"],"names":["StyledAside","styled","aside","_templateObject","Object","taggedTemplateLiteral","_ref","theme","color","navBackground","_ref2","secondary","_ref3","open","AsideList","ul","_templateObject2","AsideListField","li","_templateObject3","NavAside","dispatch","useAppDispatch","showNavAside","useAppSelector","state","saturdayLive","react_default","a","createElement","close","onClick","setMobileNavClose","aria-label","to","map","link","key","nanoid","dist","src","height","width","alt"],"mappings":"+KAEaA,EAAcC,UAAOC,MAAKC,MAAAC,OAAAC,EAAA,EAAAD,CAAA,8XASjB,SAAAE,GAAQ,OAAAA,EAALC,MAAkBC,MAAMC,eACtC,SAAAC,GAAQ,OAAAA,EAALH,MAAkBC,MAAMG,WAOvB,SAAAC,GAAO,OAAAA,EAAJC,KAAmB,gBAAkB,sBAG1CC,EAAYb,UAAOc,GAAEC,MAAAZ,OAAAC,EAAA,EAAAD,CAAA,iFAOrBa,EAAiBhB,UAAOiB,GAAEC,MAAAf,OAAAC,EAAA,EAAAD,CAAA,6BC8CxBgB,UAlEE,WACf,IAAMC,EAAWC,cACXC,EAAeC,YACnB,SAACC,GAAK,OAAKA,EAAMC,aAAaH,eAEhC,OACEI,EAAAC,EAAAC,cAAC7B,EAAW,CAACa,KAAMU,GACjBI,EAAAC,EAAAC,cAAC5B,EAAA,EAAe,CACd6B,OAAK,EACLC,QAAS,kBAAMV,EAASW,gBACxBC,aAAW,uCACZ,KAGDN,EAAAC,EAAAC,cAACf,EAAS,KACP,CACCa,EAAAC,EAAAC,cAAC5B,EAAA,EAAa,CAACiC,GAAG,IAAIH,QAAS,kBAAMV,EAASW,iBAAsB,QAIpEL,EAAAC,EAAAC,cAAC5B,EAAA,EAAa,CACZiC,GAAG,QACHH,QAAS,kBAAMV,EAASW,iBACzB,QAIDL,EAAAC,EAAAC,cAAC5B,EAAA,EAAa,CACZiC,GAAG,SACHH,QAAS,kBAAMV,EAASW,iBACzB,SAIDL,EAAAC,EAAAC,cAAC5B,EAAA,EAAa,CACZiC,GAAG,aACHH,QAAS,kBAAMV,EAASW,iBACzB,aAIDL,EAAAC,EAAAC,cAAC5B,EAAA,EAAa,CACZiC,GAAG,WACHH,QAAS,kBAAMV,EAASW,iBACzB,WAIDL,EAAAC,EAAAC,cAAC5B,EAAA,EAAa,CACZiC,GAAG,WACHH,QAAS,kBAAMV,EAASW,iBACzB,YAGDG,IAAI,SAACC,GAAI,OACTT,EAAAC,EAAAC,cAACZ,EAAc,CAACoB,IAAKC,eAAWF,MAIpCT,EAAAC,EAAAC,cAACU,EAAA,EAAO,CAACL,GAAG,IAAIH,QAAS,kBAAMV,EAASW,iBACtCL,EAAAC,EAAAC,cAAA,OAAKW,IAAI,cAAcC,OAAQ,GAAIC,MAAO,GAAIC,IAAI","file":"static/js/1.60bb8a12.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const StyledAside = styled.aside<{ open: boolean }>`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 1080;\r\n  width: 200px;\r\n  height: 100%;\r\n  max-height: 400px;\r\n  border-radius: 0 5px 5px 0;\r\n  background-color: ${({ theme }) => theme.color.navBackground};\r\n  color: ${({ theme }) => theme.color.secondary};\r\n  padding: 16px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  transition: transform 1s ease-in-out;\r\n  transform: ${({ open }) => (open ? 'translateX(0)' : 'translateX(-100%)')};\r\n`;\r\n\r\nexport const AsideList = styled.ul`\r\n  list-style-type: none;\r\n  padding: 0;\r\n  width: 100%;\r\n  margin: 0;\r\n`;\r\n\r\nexport const AsideListField = styled.li`\r\n  margin: 16px 0;\r\n`;\r\n","import React from 'react';\r\n\r\nimport { nanoid } from '@reduxjs/toolkit';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useAppDispatch, useAppSelector } from '../../../hooks';\r\nimport { setMobileNavClose } from '../../../saturdaylive/saturdayLiveReducer';\r\nimport { HamburgerButton, NavLinkMobile } from '../styled';\r\nimport { StyledAside, AsideList, AsideListField } from './styled';\r\n\r\nconst NavAside = () => {\r\n  const dispatch = useAppDispatch();\r\n  const showNavAside = useAppSelector(\r\n    (state) => state.saturdayLive.showNavAside\r\n  );\r\n  return (\r\n    <StyledAside open={showNavAside}>\r\n      <HamburgerButton\r\n        close\r\n        onClick={() => dispatch(setMobileNavClose())}\r\n        aria-label=\"zamknij nawigację mobilną\"\r\n      >\r\n        x\r\n      </HamburgerButton>\r\n      <AsideList>\r\n        {[\r\n          <NavLinkMobile to=\"/\" onClick={() => dispatch(setMobileNavClose())}>\r\n            Home\r\n          </NavLinkMobile>,\r\n\r\n          <NavLinkMobile\r\n            to=\"/demo\"\r\n            onClick={() => dispatch(setMobileNavClose())}\r\n          >\r\n            Demo\r\n          </NavLinkMobile>,\r\n\r\n          <NavLinkMobile\r\n            to=\"/o-nas\"\r\n            onClick={() => dispatch(setMobileNavClose())}\r\n          >\r\n            O nas\r\n          </NavLinkMobile>,\r\n\r\n          <NavLinkMobile\r\n            to=\"/repertuar\"\r\n            onClick={() => dispatch(setMobileNavClose())}\r\n          >\r\n            Repertuar\r\n          </NavLinkMobile>,\r\n\r\n          <NavLinkMobile\r\n            to=\"/galeria\"\r\n            onClick={() => dispatch(setMobileNavClose())}\r\n          >\r\n            Galeria\r\n          </NavLinkMobile>,\r\n\r\n          <NavLinkMobile\r\n            to=\"/kontakt\"\r\n            onClick={() => dispatch(setMobileNavClose())}\r\n          >\r\n            Kontakt\r\n          </NavLinkMobile>\r\n        ].map((link) => (\r\n          <AsideListField key={nanoid()}>{link}</AsideListField>\r\n        ))}\r\n      </AsideList>\r\n\r\n      <NavLink to=\"/\" onClick={() => dispatch(setMobileNavClose())}>\r\n        <img src=\"favicon.ico\" height={60} width={60} alt=\"\" />\r\n      </NavLink>\r\n    </StyledAside>\r\n  );\r\n};\r\n\r\nexport default NavAside;\r\n"],"sourceRoot":""}