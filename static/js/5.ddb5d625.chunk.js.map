{"version":3,"sources":["pages/Home/YoutubePlayer/Player/Player.tsx","pages/Home/YoutubePlayer/Player/usePlayer.ts"],"names":["Player","_ref","setHasLoaded","videoId","_usePlayer","setShowVideo","_useState","useState","_useState2","Object","slicedToArray","playingCode","setPlayingCode","useEffect","_onReady","event","target","playVideo","_onStateChange","data","opts","playerVars","autoplay","rel","controls","usePlayer","react_default","a","createElement","YouTube_esm","onReady","onStateChange","className","iframeClassName"],"mappings":"mKAyBeA,UAlBA,SAAHC,GAA6D,IAAvDC,EAAYD,EAAZC,aAAcC,EAAOF,EAAPE,QAAqBC,ECF5B,SAAHH,GAGc,IAFlCC,EAAYD,EAAZC,aACAG,EAAYJ,EAAZI,aAAYC,EAE0BC,oBAAwB,GAAEC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAzDK,EAAWH,EAAA,GAAEI,EAAcJ,EAAA,GAyBlC,OAdAK,oBAAU,WACR,GAAoB,IAAhBF,EACF,OAAON,GAAa,IAErB,CAACM,IAUG,CAAEG,SAvBiC,SAACC,GACzCb,GAAa,GACba,EAAMC,OAAOC,aAqBIC,eAlBmC,SAACH,GACrDH,EAAeG,EAAMI,OAiBYC,KAPA,CACjCC,WAAY,CACVC,SAAU,EACVC,IAAK,EACLC,SAAU,KDvB6BC,CAAU,CACnDvB,eACAG,aAHiDJ,EAAZI,eAC/BS,EAAQV,EAARU,SAAUI,EAAcd,EAAdc,eAAgBE,EAAIhB,EAAJgB,KAKlC,OACEM,EAAAC,EAAAC,cAACC,EAAA,EAAO,CACN1B,QAASA,EACT2B,QAAShB,EACTiB,cAAeb,EACfc,UAAW,cACXC,gBAAiB,aACjBb,KAAMA","file":"static/js/5.ddb5d625.chunk.js","sourcesContent":["import React from 'react';\n\nimport YouTube from 'react-youtube';\nimport './style.css';\nimport { PlayerProps } from './types';\nimport { usePlayer } from './usePlayer';\n\nconst Player = ({ setHasLoaded, videoId, setShowVideo }: PlayerProps) => {\n  const { _onReady, _onStateChange, opts } = usePlayer({\n    setHasLoaded,\n    setShowVideo\n  });\n\n  return (\n    <YouTube\n      videoId={videoId}\n      onReady={_onReady}\n      onStateChange={_onStateChange}\n      className={'videoInner '}\n      iframeClassName={'videoInner'}\n      opts={opts}\n    />\n  );\n};\n\nexport default Player;\n","import { useEffect, useState } from 'react';\n\nimport { YouTubeProps } from 'react-youtube';\nimport { PlayerProps, PlayingCodes } from './types';\n\nexport const usePlayer = ({\n  setHasLoaded,\n  setShowVideo\n}: Omit<PlayerProps, 'videoId'>) => {\n  const [playingCode, setPlayingCode] = useState<PlayingCodes>(-2);\n\n  const _onReady: YouTubeProps['onReady'] = (event) => {\n    setHasLoaded(true);\n    event.target.playVideo();\n  };\n\n  const _onStateChange: YouTubeProps['onStateChange'] = (event) => {\n    setPlayingCode(event.data as PlayingCodes);\n  };\n\n  useEffect(() => {\n    if (playingCode === 0) {\n      return setShowVideo(false);\n    }\n  }, [playingCode]);\n\n  //*configuration: https://developers.google.com/youtube/player_parameters *//\n  const opts: YouTubeProps['opts'] = {\n    playerVars: {\n      autoplay: 1,\n      rel: 0,\n      controls: 2\n    }\n  };\n  return { _onReady, _onStateChange, opts };\n};\n"],"sourceRoot":""}