{"version":3,"sources":["components/Navigation/NavAside/styled.ts","components/Navigation/NavAside/NavAside.tsx"],"names":["StyledAside","styled","aside","_templateObject","Object","taggedTemplateLiteral","_ref","theme","color","navBackground","_ref2","secondary","_ref3","open","AsideList","ul","_templateObject2","AsideListField","li","_templateObject3","NavAside","dispatch","useAppDispatch","showNavAside","useAppSelector","state","saturdayLive","react_default","a","createElement","close","onClick","setMobileNavClose","aria-label","to","as","href","title","map","link","key","nanoid","dist","src","height","width","alt"],"mappings":"+KAEaA,EAAcC,UAAOC,MAAKC,MAAAC,OAAAC,EAAA,EAAAD,CAAA,8XASjB,SAAAE,GAAQ,OAAAA,EAALC,MAAkBC,MAAMC,eACtC,SAAAC,GAAQ,OAAAA,EAALH,MAAkBC,MAAMG,WAOvB,SAAAC,GAAO,OAAAA,EAAJC,KAAmB,gBAAkB,sBAG1CC,EAAYb,UAAOc,GAAEC,MAAAZ,OAAAC,EAAA,EAAAD,CAAA,iFAOrBa,EAAiBhB,UAAOiB,GAAEC,MAAAf,OAAAC,EAAA,EAAAD,CAAA,6BC+CxBgB,UAnEE,WACf,IAAMC,EAAWC,cACXC,EAAeC,YACnB,SAACC,GAAK,OAAKA,EAAMC,aAAaH,eAEhC,OACEI,EAAAC,EAAAC,cAAC7B,EAAW,CAACa,KAAMU,GACjBI,EAAAC,EAAAC,cAAC5B,EAAA,EAAe,CACd6B,OAAK,EACLC,QAAS,kBAAMV,EAASW,gBACxBC,aAAW,uCACZ,KAGDN,EAAAC,EAAAC,cAACf,EAAS,KACP,CACCa,EAAAC,EAAAC,cAAC5B,EAAA,EAAa,CAACiC,GAAG,IAAIH,QAAS,kBAAMV,EAASW,iBAAsB,QAIpEL,EAAAC,EAAAC,cAAC5B,EAAA,EAAa,CACZiC,GAAG,QACHH,QAAS,kBAAMV,EAASW,iBACzB,QAIDL,EAAAC,EAAAC,cAAC5B,EAAA,EAAa,CACZiC,GAAG,SACHH,QAAS,kBAAMV,EAASW,iBACzB,SAIDL,EAAAC,EAAAC,cAAC5B,EAAA,EAAa,CACZiC,GAAG,aACHH,QAAS,kBAAMV,EAASW,iBACzB,aAIDL,EAAAC,EAAAC,cAAC5B,EAAA,EAAa,CACZkC,GAAG,IACHC,KAAK,yBACLC,MAAM,4BACP,SAIDV,EAAAC,EAAAC,cAAC5B,EAAA,EAAa,CACZiC,GAAG,WACHH,QAAS,kBAAMV,EAASW,iBACzB,YAGDM,IAAI,SAACC,GAAI,OACTZ,EAAAC,EAAAC,cAACZ,EAAc,CAACuB,IAAKC,eAAWF,MAIpCZ,EAAAC,EAAAC,cAACa,EAAA,EAAO,CAACR,GAAG,IAAIH,QAAS,kBAAMV,EAASW,iBACtCL,EAAAC,EAAAC,cAAA,OAAKc,IAAI,cAAcC,OAAQ,GAAIC,MAAO,GAAIC,IAAI","file":"static/js/2.4493b2ce.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const StyledAside = styled.aside<{ open: boolean }>`\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 1080;\n  width: 200px;\n  height: 100%;\n  max-height: 400px;\n  border-radius: 0 5px 5px 0;\n  background-color: ${({ theme }) => theme.color.navBackground};\n  color: ${({ theme }) => theme.color.secondary};\n  padding: 16px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n  transition: transform 1s ease-in-out;\n  transform: ${({ open }) => (open ? 'translateX(0)' : 'translateX(-100%)')};\n`;\n\nexport const AsideList = styled.ul`\n  list-style-type: none;\n  padding: 0;\n  width: 100%;\n  margin: 0;\n`;\n\nexport const AsideListField = styled.li`\n  margin: 16px 0;\n`;\n","import React from 'react';\n\nimport { nanoid } from '@reduxjs/toolkit';\nimport { NavLink } from 'react-router-dom';\nimport { useAppDispatch, useAppSelector } from '../../../hooks';\nimport { setMobileNavClose } from '../../../saturdaylive/saturdayLiveReducer';\nimport { HamburgerButton, NavLinkMobile } from '../styled';\nimport { StyledAside, AsideList, AsideListField } from './styled';\n\nconst NavAside = () => {\n  const dispatch = useAppDispatch();\n  const showNavAside = useAppSelector(\n    (state) => state.saturdayLive.showNavAside\n  );\n  return (\n    <StyledAside open={showNavAside}>\n      <HamburgerButton\n        close\n        onClick={() => dispatch(setMobileNavClose())}\n        aria-label=\"zamknij nawigację mobilną\"\n      >\n        x\n      </HamburgerButton>\n      <AsideList>\n        {[\n          <NavLinkMobile to=\"/\" onClick={() => dispatch(setMobileNavClose())}>\n            Home\n          </NavLinkMobile>,\n\n          <NavLinkMobile\n            to=\"/demo\"\n            onClick={() => dispatch(setMobileNavClose())}\n          >\n            Demo\n          </NavLinkMobile>,\n\n          <NavLinkMobile\n            to=\"/o-nas\"\n            onClick={() => dispatch(setMobileNavClose())}\n          >\n            O nas\n          </NavLinkMobile>,\n\n          <NavLinkMobile\n            to=\"/repertuar\"\n            onClick={() => dispatch(setMobileNavClose())}\n          >\n            Repertuar\n          </NavLinkMobile>,\n\n          <NavLinkMobile\n            as=\"a\"\n            href=\"SATURDAYLIVE_rider.pdf\"\n            title=\"Pobierz Rider techniczny\"\n          >\n            Rider\n          </NavLinkMobile>,\n\n          <NavLinkMobile\n            to=\"/kontakt\"\n            onClick={() => dispatch(setMobileNavClose())}\n          >\n            Kontakt\n          </NavLinkMobile>\n        ].map((link) => (\n          <AsideListField key={nanoid()}>{link}</AsideListField>\n        ))}\n      </AsideList>\n\n      <NavLink to=\"/\" onClick={() => dispatch(setMobileNavClose())}>\n        <img src=\"favicon.ico\" height={60} width={60} alt=\"\" />\n      </NavLink>\n    </StyledAside>\n  );\n};\n\nexport default NavAside;\n"],"sourceRoot":""}